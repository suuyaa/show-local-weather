{"ast":null,"code":"import _classCallCheck from\"/Users/suya/Desktop/front end study/webProjects/showlocalweather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/suya/Desktop/front end study/webProjects/showlocalweather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/suya/Desktop/front end study/webProjects/showlocalweather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/suya/Desktop/front end study/webProjects/showlocalweather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Weather from'./Components/Weather';import\"./App.css\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"weather-icons/css/weather-icons.css\";// import DegreeToggle from './Components/DegreeToggle';\nvar API_key=\"eb1bf46af9d73715c31e3645e772dd3c\";// api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.updateForecastDegree=function(event){_this.setState({degreeType:event.target.value});};_this.state={isLoading:false,degreeType:'celsius',city:null,icon:null,country:null,temp:null,temp_min:null,temp_max:null,feelslike:null,description:null,error:\"\"};// this.getWeather();\n_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\",Drizzle:\"wi-sleet\",Rain:\"wi-storm-showers\",Snow:\"wi-snow\",Atmosphere:\"wi-fog\",Clear:\"wi-day-sunny\",Clouds:\"wi-day-fog\"};return _this;}_createClass(App,[{key:\"getWeatherIcon\",value:function getWeatherIcon(icons,rangeID){switch(true){case rangeID>=200&&rangeID<=232:this.setState({icon:icons.Thunderstorm});break;case rangeID>=300&&rangeID<=321:this.setState({icon:icons.Drizzle});break;case rangeID>=500&&rangeID<=531:this.setState({icon:icons.Rain});break;case rangeID>=600&&rangeID<=622:this.setState({icon:icons.Snow});break;case rangeID>=701&&rangeID<=781:this.setState({icon:icons.Atmosphere});break;case rangeID===800:this.setState({icon:icons.Clear});break;case rangeID>=801&&rangeID<=804:this.setState({icon:icons.Clouds});break;default:this.setState({icon:icons.Clouds});}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;navigator.geolocation.getCurrentPosition(function(position){_this2.fetchWeather(position.coords.latitude,position.coords.longitude);},function(error){_this2.setState({error:'Error Getting Weather Conditions'});});}},{key:\"fetchWeather\",value:function fetchWeather(){var _this3=this;var lat=arguments.length>0&&arguments[0]!==undefined?arguments[0]:25;var lon=arguments.length>1&&arguments[1]!==undefined?arguments[1]:25;fetch(\"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat,\"&lon=\").concat(lon,\"&APPID=\").concat(API_key,\"&units=metric\")).then(function(res){return res.json();}).then(function(json){_this3.setState({city:json.name,country:json.sys.country,temp:_this3.calCelsius(json.main.temp),temp_min:_this3.calCelsius(json.main.temp_min),temp_max:_this3.calCelsius(json.main.temp_max),feelslike:_this3.calCelsius(json.main.feels_like),description:json.weather[0].description,isLoading:false});_this3.getWeatherIcon(_this3.weatherIcon,json.weather[0].id);console.log(json);});}},{key:\"calCelsius\",value:function calCelsius(temp){return Math.floor(temp);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Weather,{Clicked:this.updateForecastDegree,city:this.state.city,country:this.state.country,temp:this.state.temp,temp_min:this.state.temp_min,temp_max:this.state.temp_max,feels_like:this.state.feelslike,description:this.state.description,icon:this.state.icon,degreeType:this.state.degreeType}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/showlocalweather/src/App.js"],"names":["React","Component","Weather","API_key","App","updateForecastDegree","event","setState","degreeType","target","value","state","isLoading","city","icon","country","temp","temp_min","temp_max","feelslike","description","error","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeID","navigator","geolocation","getCurrentPosition","position","fetchWeather","coords","latitude","longitude","lat","lon","fetch","then","res","json","name","sys","calCelsius","main","feels_like","weather","getWeatherIcon","id","console","log","Math","floor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Weather from './Components/Weather';\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\n// import DegreeToggle from './Components/DegreeToggle';\n\nconst API_key = \"eb1bf46af9d73715c31e3645e772dd3c\";\n// api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      degreeType: 'celsius',\n      city: null,\n      icon: null,\n      country: null,\n      temp: null,\n      temp_min: null,\n      temp_max: null,\n      feelslike: null,\n      description: null,\n      error:\"\"\n    };\n    // this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n\n  getWeatherIcon(icons, rangeID) {\n    switch(true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({icon: icons.Thunderstorm});\n        break;\n        case rangeID >= 300 && rangeID <= 321:\n        this.setState({icon: icons.Drizzle});\n        break;\n        case rangeID >= 500 && rangeID <= 531:\n        this.setState({icon: icons.Rain});\n        break;\n        case rangeID >= 600 && rangeID <= 622:\n        this.setState({icon: icons.Snow});\n        break;\n        case rangeID >= 701 && rangeID <= 781:\n        this.setState({icon: icons.Atmosphere});\n        break;\n        case rangeID === 800:\n        this.setState({icon: icons.Clear});\n        break;\n        case rangeID >= 801 && rangeID <= 804:\n        this.setState({icon: icons.Clouds});\n        break;\n        default: this.setState({icon: icons.Clouds});\n    }\n  }\n\n  componentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tposition => {\n\t\t\t\tthis.fetchWeather(position.coords.latitude, position.coords.longitude);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: 'Error Getting Weather Conditions'\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tfetchWeather(lat = 25, lon = 25) {\n\t\tfetch(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${API_key}&units=metric`\n\t\t)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({\n          city: json.name,\n          country: json.sys.country,\n          temp: this.calCelsius(json.main.temp),\n          temp_min: this.calCelsius(json.main.temp_min),\n          temp_max: this.calCelsius(json.main.temp_max),\n          feelslike: this.calCelsius(json.main.feels_like),\n          description: json.weather[0].description,\n\t\t\t\t\tisLoading: false\n        });\n        \n        this.getWeatherIcon(this.weatherIcon, json.weather[0].id)\n\n      console.log(json);\n      });\n  }\n  \n  updateForecastDegree = event => {\n    this.setState({\n      degreeType: event.target.value\n    })\n  }\n  \n  calCelsius(temp) {\n    return Math.floor(temp);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Weather Clicked={this.updateForecastDegree} city={this.state.city} country={this.state.country} temp={this.state.temp} temp_min={this.state.temp_min} temp_max={this.state.temp_max} feels_like={this.state.feelslike} description={this.state.description} icon={this.state.icon} degreeType={this.state.degreeType}  />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}